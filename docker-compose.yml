version: '3.7'

services:

  configserver:
    image: config:1
    build:
      context: ./configserver
      dockerfile: Dockerfile
    volumes:
      - /tmp/cloud
    ports:
      - "8888:8888"
    environment:
      SERVER_PORT : 8888         
    networks:
     - backend
    restart: always
    deploy:
     resources:
      limits: 
       memory: 64mb
      reservations:
       memory: 64mb
       
  zipkin:
    image: zipkin:1
    build:
      context: ./zipkin
      dockerfile: Dockerfile
    volumes:
      - /tmp/cloud
    ports:
      - "9411"
    environment:
      SERVER_PORT: 9411
    networks:
     - backend
    restart: always
    deploy:
     resources:
      limits: 
       memory: 64mb
      reservations:
       memory: 64mb       
             
  eureka-1:
    image: eureka:1
    build:
      context: ./eureka
      dockerfile: Dockerfile
    volumes:
      - /tmp/cloud
    ports:
      - "8761:8761"
    depends_on:
      - "zipkin"      
    environment:
      SERVER_PORT: 8761
      SPRING_ZIPKIN_BASEURL : http://zipkin:9411/
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-1:8761/eureka/,http://eureka-2:8762/eureka/"
      EUREKA_CLIENT_SERVICEURL_REGISTER-WITH-EUREKA : "true"
      EUREKA_CLIENT_SERVICEURL_FETCH-REGISTRY : "true"
      EUREKA_INSTANCE_HOSTNAME : eureka-1
      EUREKA_INSTANCE_APPNAME : eureka-cluster
      
    networks:
     - backend
    restart: always
    deploy:
     resources:
      limits: 
       memory: 64mb
      reservations:
       memory: 64mb


             
  eureka-2:
    image: eureka:1
    build:
      context: ./eureka
      dockerfile: Dockerfile
    volumes:
      - /tmp/cloud
    ports:
      - "8762:8762"
    depends_on:
      - "zipkin"      
    environment:
      SERVER_PORT: 8762
      SPRING_ZIPKIN_BASEURL : http://zipkin:9411/ 
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-1:8761/eureka/,http://eureka-2:8762/eureka/"
      EUREKA_CLIENT_SERVICEURL_REGISTER-WITH-EUREKA: "true"
      EUREKA_CLIENT_SERVICEURL_FETCH-REGISTRY: "true"
      EUREKA_INSTANCE_HOSTNAME: eureka-2
      EUREKA_INSTANCE_APPNAME: eureka-cluster
    networks:
     - backend
    restart: always
    deploy:
     resources:
      limits: 
       memory: 64mb
      reservations:
       memory: 64mb


 
  apigateway:
    image: apigateway:1
    build:
      context: ./apigateway
      dockerfile: Dockerfile
    volumes:
      - /tmp/cloud
    ports:
      - "9090:9090"
    networks:
     - backend      
    depends_on:
      - "configserver"
      - "zipkin"
      - "eureka-1"
      - "eureka-2"
      - "ms"
    environment:
      SERVER_PORT: 9090
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-1:8761/eureka/,http://eureka-2:8762/eureka/"
      CLOUD_CONFIG_URI: http://configserver:8888/
      SPRING_ZIPKIN_BASEURL: http://zipkin:9411/
    restart: always
    deploy:
     resources:
      limits: 
       memory: 64mb
      reservations:
       memory: 64mb
           
          
  ms:
    image: ms:1
    build:
      context: ./microservice
      dockerfile: Dockerfile
    volumes:
      - /tmp/cloud
    ports:
      - "8090"
    networks:
     - backend      
    depends_on:
      - "configserver"
      - "zipkin"
    environment:
       SERVER_PORT: 8090
       EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-1:8761/eureka/,http://eureka-2:8762/eureka/"
       CLOUD_CONFIG_URI: http://configserver:8888/
       SPRING_ZIPKIN_BASEURL: http://zipkin:9411/
    restart: always
    deploy:
#     restart_policy:
#       condition: on-failure
#       delay: 5s
#       max_attempts: 3    
#     mode: replicated
#     replicas: 6    
     resources:
      limits: 
       memory: 64mb
      reservations:
       memory: 64mb
       
# Networks to be created to facilitate communication between containers
networks:
  backend:       
       